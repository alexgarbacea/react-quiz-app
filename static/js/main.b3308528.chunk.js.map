{"version":3,"sources":["question_options.js","components/Questions.js","components/Timer.js","App.js","index.js"],"names":["questions","title","options","text","isCorrect","questionsLength","length","shuffleAnswers","id","temporaryValue","randomIndex","rdnOptions","currentIndex","Math","floor","random","Questions","end","useState","currentQuestion","setCurrentQuestion","score","setScore","finish","setFinish","answears","setAnswears","showAnswears","setShowAnswears","className","style","width","fontSize","onClick","window","location","reload","map","ans","i","color","opt","option","Timer","time","timePer","timeUp","counter","setCounter","useEffect","setTimeout","sec","minutes","seconds","formatTime","App","started","setStarted","timeDone","setTimeDone","showTime","setShowTime","timerState","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAaA,EAAY,CACrB,CACIC,MAAO,kCACPC,QAAS,CACL,CAAEC,KAAM,SAAUC,WAAW,GAC7B,CAAED,KAAM,QAASC,WAAW,GAC5B,CAAED,KAAM,YAAaC,WAAW,GAChC,CAAED,KAAM,SAAUC,WAAW,KAGrC,CACIH,MAAO,iCACPC,QAAS,CACL,CAAEC,KAAM,QAASC,WAAW,GAC5B,CAAED,KAAM,YAAaC,WAAW,GAChC,CAAED,KAAM,MAAOC,WAAW,GAC1B,CAAED,KAAM,SAAUC,WAAW,KAGrC,CACIH,MAAO,yCACPC,QAAS,CACL,CAAEC,KAAM,gBAAiBC,WAAW,GACpC,CAAED,KAAM,UAAWC,WAAW,GAC9B,CAAED,KAAM,SAAUC,WAAW,GAC7B,CAAED,KAAM,UAAWC,WAAW,KAGtC,CACIH,MAAO,2CACPC,QAAS,CACL,CAAEC,KAAM,mBAAoBC,WAAW,GACvC,CAAED,KAAM,cAAeC,WAAW,GAClC,CAAED,KAAM,kBAAmBC,WAAW,GACtC,CAAED,KAAM,iBAAkBC,WAAW,KAG7C,CACIH,MAAO,eACPC,QAAS,CACL,CAAEC,KAAM,IAAKC,WAAW,GACxB,CAAED,KAAM,IAAKC,WAAW,GACxB,CAAED,KAAM,IAAKC,WAAW,GACxB,CAAED,KAAM,KAAMC,WAAW,MAKxBC,EAAkBL,EAAUM,OAE5BC,EAAiB,SAACC,GAG3B,IAFA,IACsCC,EAAgBC,EADhDC,EAAaX,EAAUQ,GAAIN,QAC7BU,EAAeD,EAAWL,OACvB,IAAMM,GACTF,EAAcG,KAAKC,MAAMD,KAAKE,SAAWH,GAEzCH,EAAiBE,EADjBC,GAAgB,GAEhBD,EAAWC,GAAgBD,EAAWD,GACtCC,EAAWD,GAAeD,EAE9B,OAAOE,G,OCYIK,EApEG,SAAC,GAAW,IAAVC,EAAS,EAATA,IAEhB,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BJ,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,oBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KAcA,OACI,gCACML,EAGF,gDAFA,2CAAcJ,EAAd,IAAgCnB,EAAUM,OAA1C,OAKA,qBAAKuB,UAAU,kBAAf,SACI,qBAAKA,UAAU,eACfC,MAAO,CAACC,MAAM,GAAD,OAAIlB,KAAKC,MAA2B,KAAnBK,EAAgB,GAAQnB,EAAUM,QAAnD,MADb,SAEKa,EAAkB,GAAlB,UAA0BN,KAAKC,MAA+B,KAAvBK,EAAkB,GAAYnB,EAAUM,QAA/E,SAIPiB,EAGF,qCACI,gDACA,+BAAKF,EAAL,IAAY,sBAAMS,MAAO,CAACE,SAAU,QAAxB,oBACZ,qBAAKH,UAAU,MAAMI,QAAS,kBAAMC,OAAOC,SAASC,UAApD,oBACA,uBACET,EAGE,gCACI,sBAAME,UAAU,WAAWI,QAAS,kBAAML,GAAgB,IAA1D,6BACCH,EAASY,KAAI,SAACC,EAAKC,GAAN,OACV,sBAAaV,UAAU,gBAAgBC,MAAO,CAACU,MAAOF,EAAIlC,UAAY,QAAU,OAAhF,UACKmC,EAAE,EADP,KACYD,EAAInC,OADNoC,SALlB,sBAAMV,UAAU,WAAWI,QAAS,kBAAML,GAAgB,IAA1D,gCARR,oBAAIC,UAAU,iBAAd,SAAgC7B,EAAUmB,EAAgB,GAAGlB,SAqB3DsB,GAAUkB,EAAItB,EAAgB,GAAGkB,KAC/B,SAACK,EAAQH,GAAT,OACI,qBAAKV,UAAU,WAAmBI,QAAS,kBAnDrC7B,EAmDwDsC,EAAOtC,UAnDpDD,EAmD+DuC,EAAOvC,KAlDnGuB,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAACtB,KAAMA,EAAMC,UAAWA,MAC/CA,GAAWkB,EAASD,EAAS,IAAIrB,EAAUM,QAE3Ca,EAAkBnB,EAAUM,SAE3BW,GAAI,GACJO,GAAU,SAHyBJ,EAAmBD,EAAkB,GAJ3D,IAACf,EAAWD,GAmDjB,SACKuC,EAAOvC,MADmBoC,UC/BpCI,EA9BD,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAE3B,EAA8B5B,mBAAS0B,EAAOC,GAA9C,mBAAOE,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACNF,EAAU,GAAKG,YAAW,kBAAMF,EAAWD,EAAU,KAAI,OAC1D,CAACA,IAiBJ,OACI,8BACI,+BAAI,sBAAMjB,MAAO,CAACE,SAAS,QAAvB,wBAAJ,IAjBW,SAAAmB,GACf,GAAGA,EAAM,GAAG,CACR,IAAMC,EAAUvC,KAAKC,MAAMqC,EAAI,IACzBE,EAAUF,EAAgB,GAAVC,EACtB,OAAQC,EAAU,EAAX,UAAmBD,EAAnB,YAA8BC,GAA9B,UAA6CD,EAA7C,aAAyDC,GAE/D,OAAIF,EAAM,GAAKA,EAAM,GACdA,EAAM,EAAP,YAAiBA,GAAjB,aAA+BA,IAGtCL,IACO,QAMgDQ,CAAWP,SCyB/DQ,EA7CH,WACR,MAA8BrC,oBAAS,GAAvC,mBAAOsC,EAAP,KAAgBC,EAAhB,KACA,EAAgCvC,oBAAS,GAAzC,mBAAOwC,EAAP,KAAiBC,EAAjB,KACA,EAAgCzC,oBAAS,GAAzC,mBAAO0C,EAAP,KAAiBC,EAAjB,KAWMC,EAAa,SAACC,GAChBF,EAAYE,IAGhB,OACI,sBAAKlC,UAAU,UAAf,UACO2B,GAAYI,EAEf,cAAC,EAAD,CAAOhB,KAAQvC,EAAiBwC,QAAW,GAAIC,OAZxC,WACXa,GAAY,MAUR,4CAEA,sBAAK9B,UAAU,MAAf,UACK2B,GACIE,GAAY,cAAC,EAAD,CAAWzC,IAAK6C,IAEjC,qCACI,wCACA,6CACA,uBACA,qBAAKjC,UAAU,MAAMI,QAAS,kBAzB1CwB,GAyB0D,QAxB1DK,GAAW,IAwBC,sBAGHJ,GACG,qCACI,oBAAI5B,MAAO,CAACU,MAAM,OAAlB,wBACA,qBAAKX,UAAU,MAAMI,QAAS,kBAAMC,OAAOC,SAASC,UAApD,8B,MCvCxB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b3308528.chunk.js","sourcesContent":["export const questions = [\r\n    {\r\n        title: 'What is the capital of Romania?',\r\n        options: [\r\n            { text: 'Brasov', isCorrect: false },\r\n            { text: 'Sibiu', isCorrect: false },\r\n            { text: 'Bucharest', isCorrect: true },\r\n            { text: 'Oradea', isCorrect: false }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Which company owns the iPhone?',\r\n        options: [\r\n            { text: 'Apple', isCorrect: true },\r\n            { text: 'Microsoft', isCorrect: false },\r\n            { text: 'IBM', isCorrect: false },\r\n            { text: 'Amazon', isCorrect: false }\r\n        ]\r\n    },\r\n    {\r\n        title: 'What is the tallest mountain on Earth?',\r\n        options: [\r\n            { text: 'Kangchenjunga', isCorrect: false },\r\n            { text: 'Everest', isCorrect: true },\r\n            { text: 'Lhotse', isCorrect: false },\r\n            { text: 'Manaslu', isCorrect: false }\r\n        ]\r\n    },\r\n    {\r\n        title: 'What is the biggest animal in the world?',\r\n        options: [\r\n            { text: 'The gigant squid', isCorrect: false },\r\n            { text: 'The giraffe', isCorrect: false },\r\n            { text: 'The great white', isCorrect: false },\r\n            { text: 'The blue whale', isCorrect: true }\r\n        ]\r\n    },\r\n    {\r\n        title: 'What is 1+1?',\r\n        options: [\r\n            { text: '2', isCorrect: true },\r\n            { text: '3', isCorrect: false },\r\n            { text: '6', isCorrect: false },\r\n            { text: '10', isCorrect: false }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const questionsLength = questions.length;\r\n\r\nexport const shuffleAnswers = (id) => {\r\n    const rdnOptions = questions[id].options;\r\n    let currentIndex = rdnOptions.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = rdnOptions[currentIndex];\r\n        rdnOptions[currentIndex] = rdnOptions[randomIndex];\r\n        rdnOptions[randomIndex] = temporaryValue;\r\n    }\r\n    return rdnOptions;\r\n}","import { shuffleAnswers as opt,  questions } from \"../question_options\"\r\n\r\nimport { useState } from \"react\"\r\n\r\nconst Questions = ({end}) => {\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(1);\r\n    const [score, setScore] = useState(0);\r\n    const [finish, setFinish] = useState(false);\r\n    const [answears, setAnswears] = useState([]);\r\n    const [showAnswears, setShowAnswears] = useState(false);\r\n\r\n    const selectAnswer = (isCorrect, text) => {\r\n        setAnswears([...answears, {text: text, isCorrect: isCorrect}]);\r\n        if(isCorrect) setScore(score + (100/questions.length));//right answear\r\n\r\n        if(currentQuestion < questions.length) setCurrentQuestion(currentQuestion + 1)//next question\r\n        else {//finish quiz\r\n            end(false)\r\n            setFinish(true)\r\n            setCurrentQuestion(currentQuestion + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!finish ?\r\n            <h2>Question {currentQuestion}/{questions.length} </h2>\r\n            :\r\n            <h2>Quiz completed</h2>\r\n            }\r\n\r\n            <div className=\"progress-bar-bg\">\r\n                <div className=\"progress-bar\" \r\n                style={{width:`${Math.floor(((currentQuestion-1)*100)/questions.length)}%`}}>\r\n                    {currentQuestion > 1 && `${Math.floor(((currentQuestion - 1) * 100) / questions.length)}%`}\r\n                </div>\r\n            </div>\r\n\r\n            {!finish ?\r\n            <h3 className=\"question-title\">{questions[currentQuestion-1].title}</h3>\r\n            :\r\n            <>\r\n                <h3>YOUR SCORE IS:</h3>\r\n                <h1>{score}/<span style={{fontSize: '22px'}}>100</span></h1>\r\n                <div className=\"btn\" onClick={() => window.location.reload()}>Retake</div>\r\n                <hr />\r\n                {!showAnswears ? \r\n                    <span className=\"show-btn\" onClick={() => setShowAnswears(true)}>show my answers</span>\r\n                :\r\n                    <div>\r\n                        <span className=\"show-btn\" onClick={() => setShowAnswears(false)}>hide my answers</span>\r\n                        {answears.map((ans, i) => (\r\n                            <div key={i} className=\"show-answears\" style={{color: ans.isCorrect ? 'green' : 'red'}}>\r\n                                {i+1}. {ans.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </>\r\n            }\r\n            {!finish && opt(currentQuestion-1).map(\r\n                (option, i) => (\r\n                    <div className=\"question\" key={i} onClick={() => selectAnswer(option.isCorrect, option.text)}>\r\n                        {option.text}\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import { useState, useEffect } from 'react'\r\n\r\nconst Timer = ({time, timePer, timeUp}) => {\r\n\r\n    const [counter, setCounter] = useState(time * timePer);\r\n\r\n    useEffect(() => {\r\n        counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n    }, [counter]);\r\n\r\n    const formatTime = sec => {\r\n        if(sec > 59){\r\n            const minutes = Math.floor(sec/60);\r\n            const seconds = sec - minutes * 60;\r\n            return (seconds > 9) ? `${minutes}:${seconds}` : `${minutes}:0${seconds}`;\r\n        }\r\n        else if (sec > 0 && sec < 59){\r\n            return (sec > 9) ? `0:${sec}` : `0:0${sec}`;\r\n        }\r\n        else {\r\n            timeUp();\r\n            return '0:00'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1><span style={{fontSize:'22px'}}>Time left:</span> {formatTime(counter)}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import Questions from \"./components/Questions\"\r\nimport Timer from \"./components/Timer\"\r\n\r\nimport { useState } from \"react\"\r\n\r\nimport { questionsLength } from \"./question_options\"\r\n\r\nconst App = () => {\r\n    const [started, setStarted] = useState(false);\r\n    const [timeDone, setTimeDone] = useState(false);\r\n    const [showTime, setShowTime] = useState(false);\r\n\r\n    const startQuiz = (state) => {\r\n        setStarted(state);\r\n        timerState(true)\r\n    }\r\n\r\n    const timeUp = () => {\r\n        setTimeDone(true);\r\n    }\r\n\r\n    const timerState = (state) => {\r\n        setShowTime(state);\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {(!started || !showTime) ? \r\n            <h1>QUIZ TIME!</h1> : \r\n            <Timer time = {questionsLength} timePer = {10} timeUp = {timeUp} />}\r\n            <div className=\"box\">\r\n                {started ?\r\n                    !timeDone && <Questions end={timerState}/>\r\n                :\r\n                <>\r\n                    <h2>Ready?</h2>\r\n                    <div>Good luck!</div>\r\n                    <br />\r\n                    <div className=\"btn\" onClick={() => startQuiz(true)}>START</div>\r\n                </>\r\n                }\r\n                {timeDone && \r\n                    <>\r\n                        <h2 style={{color:'red'}}>Time's up!</h2>\r\n                        <div className=\"btn\" onClick={() => window.location.reload()}>Retake</div>\r\n                    </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}