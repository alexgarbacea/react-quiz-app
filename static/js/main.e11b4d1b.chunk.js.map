{"version":3,"sources":["question_options.js","components/Questions.js","App.js","index.js"],"names":["questions","title","options","text","isCorrect","shuffleAnswers","id","temporaryValue","randomIndex","rdnOptions","currentIndex","length","Math","floor","random","Questions","useState","currentQuestion","setCurrentQuestion","score","setScore","finish","setFinish","answears","setAnswears","showAnswears","setShowAnswears","style","fontSize","className","onClick","window","location","reload","map","ans","i","color","opt","option","App","started","setStarted","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e11b4d1b.chunk.js","sourcesContent":["export const questions = [\r\n    {\r\n        title: 'What is the capital of Romania?',\r\n        options: [\r\n            { text: 'Brasov', isCorrect: false },\r\n            { text: 'Sibiu', isCorrect: false },\r\n            { text: 'Bucharest', isCorrect: true },\r\n            { text: 'Oradea', isCorrect: false }\r\n        ]\r\n    },\r\n    {\r\n        title: 'Which company owns the iPhone?',\r\n        options: [\r\n            { text: 'Apple', isCorrect: true },\r\n            { text: 'Microsoft', isCorrect: false },\r\n            { text: 'IBM', isCorrect: false },\r\n            { text: 'Amazon', isCorrect: false }\r\n        ]\r\n    },\r\n    {\r\n        title: 'What is the tallest mountain on Earth?',\r\n        options: [\r\n            { text: 'Kangchenjunga', isCorrect: false },\r\n            { text: 'Everest', isCorrect: true },\r\n            { text: 'Lhotse', isCorrect: false },\r\n            { text: 'Manaslu', isCorrect: false }\r\n        ]\r\n    },\r\n    {\r\n        title: 'What is the biggest animal in the world?',\r\n        options: [\r\n            { text: 'The gigant squid', isCorrect: false },\r\n            { text: 'The giraffe', isCorrect: false },\r\n            { text: 'The great white', isCorrect: false },\r\n            { text: 'The blue whale', isCorrect: true }\r\n        ]\r\n    },\r\n    {\r\n        title: 'What is 1+1?',\r\n        options: [\r\n            { text: '2', isCorrect: true },\r\n            { text: '3', isCorrect: false },\r\n            { text: '6', isCorrect: false },\r\n            { text: '10', isCorrect: false }\r\n        ]\r\n    }\r\n]\r\n\r\nexport const questionsLength = questions.length;\r\n\r\nexport const shuffleAnswers = (id) => {\r\n    const rdnOptions = questions[id].options;\r\n    let currentIndex = rdnOptions.length, temporaryValue, randomIndex;\r\n    while (0 !== currentIndex) {\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n        temporaryValue = rdnOptions[currentIndex];\r\n        rdnOptions[currentIndex] = rdnOptions[randomIndex];\r\n        rdnOptions[randomIndex] = temporaryValue;\r\n    }\r\n    return rdnOptions;\r\n}","import { shuffleAnswers as opt,  questions } from \"../question_options\"\r\n\r\nimport { useState } from \"react\"\r\n\r\nconst Questions = () => {\r\n\r\n    const [currentQuestion, setCurrentQuestion] = useState(1);\r\n    const [score, setScore] = useState(0);\r\n    const [finish, setFinish] = useState(false);\r\n    const [answears, setAnswears] = useState([]);\r\n    const [showAnswears, setShowAnswears] = useState(false);\r\n\r\n    const selectAnswer = (isCorrect, text) => {\r\n        setAnswears([...answears, {text: text, isCorrect: isCorrect}]);\r\n        if(isCorrect) setScore(score + (100/questions.length));//right answear\r\n\r\n        if(currentQuestion < questions.length) setCurrentQuestion(currentQuestion + 1)//next question\r\n        else setFinish(true)//finish quiz\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!finish ?\r\n            <h2>Question {currentQuestion}/{questions.length} </h2>\r\n            :\r\n            <h2>Quiz completed</h2>\r\n            }\r\n            <hr />\r\n            {!finish ?\r\n            <h3 className=\"question-title\">{questions[currentQuestion-1].title}</h3>\r\n            :\r\n            <>\r\n                <h3>YOUR SCORE IS:</h3>\r\n                <h1>{score}/<span style={{fontSize: '22px'}}>100</span></h1>\r\n                <div className=\"btn\" onClick={() => window.location.reload()}>Retake</div>\r\n                <hr />\r\n                {!showAnswears ? \r\n                    <span className=\"show-btn\" onClick={() => setShowAnswears(true)}>show my answears</span>\r\n                :\r\n                    <div>\r\n                        <span className=\"show-btn\" onClick={() => setShowAnswears(false)}>hide my answears</span>\r\n                        {answears.map((ans, i) => (\r\n                            <div key={i} className=\"show-answears\" style={{color: ans.isCorrect ? 'green' : 'red'}}>\r\n                                {i+1}. {ans.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </>\r\n            }\r\n            {!finish && opt(currentQuestion-1).map(\r\n                (option, i) => (\r\n                    <div className=\"question\" key={i} onClick={() => selectAnswer(option.isCorrect, option.text)}>\r\n                        {option.text}\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Questions\r\n","import Questions from \"./components/Questions\"\r\n\r\nimport { useState } from \"react\"\r\n\r\nconst App = () => {\r\n    const [started, setStarted] = useState(false)\r\n\r\n    const startQuiz = () => {\r\n        setStarted(true)\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <h1>QUIZ TIME!</h1>\r\n            <div className=\"box\">\r\n                {started ?\r\n                <Questions />\r\n                :\r\n                <>\r\n                    <h2>Ready?</h2>\r\n                    <div>Good luck!</div>\r\n                    <br />\r\n                    <div className=\"btn\" onClick={() => startQuiz()}>START</div>\r\n                </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}